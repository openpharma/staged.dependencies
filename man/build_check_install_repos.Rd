% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies.R
\name{build_check_install_repos}
\alias{build_check_install_repos}
\title{Recursively discover and build, check and install
internal dependencies}
\usage{
build_check_install_repos(
  repos_to_process,
  feature = "main",
  direction = c("upstream", "downstream"),
  local_repos = get_local_pkgs_from_config(),
  verbose = 0,
  steps = c("build", "check", "install"),
  rcmd_args = list(check = c("--no-manual")),
  artifact_dir = tempfile()
)
}
\arguments{
\item{repos_to_process}{\code{list} of \code{list(repo, host)} repos to start from}

\item{feature}{(\code{character}) feature to build}

\item{direction}{(\code{character}) direction in which to discover packages
either or both of "upstream" and "downstream"
to recursively checkout upstream and/or downstream dependencies}

\item{local_repos}{(\code{data.frame}) repositories that should be taken from
local rather than cloned; columns are \verb{repo, host, directory}}

\item{verbose}{(\code{numeric}) verbosity level, incremental;
(0: None, 1: packages that get installed + high-level git operations,
2: includes git checkout infos)}

\item{steps}{(\code{character} vector) subset of "build", "check", "install";
useful to skip checking for example}

\item{rcmd_args}{(\code{list}) with names \code{build}, \code{check},
\code{install} which are vectors that are passed as separate arguments
to the \verb{R CMD} commands}

\item{artifact_dir}{(\code{character}) directory where build
tarball and logs go to}
}
\value{
\code{artifact_dir} directory with log files
}
\description{
It discovers all dependencies starting from the repositories,
determines the installation order and then
builds, checks and installs them in order.
}
\examples{
\dontrun{
build_check_install_repos(
  list(list(repo = "openpharma/stageddeps.food", host = "https://github.com")),
  feature = "main",
  direction = "upstream",
  local_repos = data.frame(repo = "openpharma/stageddeps.food",
  host = "https://github.com", directory = "../scratch1/stageddeps.food/",
  stringsAsFactors = FALSE)
)
build_check_install_repos(
  list(list(repo = "openpharma/stageddeps.electricity",
  host = "https://github.com")),
  feature = "main",
  direction = "upstream",
  local_repos = data.frame(repo = "openpharma/stageddeps.electricity",
  host = "https://github.com",
  directory = "../example_ecosystem/stageddeps.electricity/",
  stringsAsFactors = FALSE),
  artifact_dir = "/tmp/test112"
)

# to install all packages
build_check_install_repos(someArgs, steps = "install")
# alternatively with slightly different arguments (e.g. dry_run),
# also adds commit SHA
install_deps(someArgs, direction = c("upstream", "downstream"))
}
}
