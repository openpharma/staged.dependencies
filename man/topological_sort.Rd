% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_methods.R
\name{topological_sort}
\alias{topological_sort}
\title{Topological graph sort}
\usage{
topological_sort(graph)
}
\arguments{
\item{graph}{(named \code{list}) list with node vector elements mapping from
child to its parents (upstream dependencies)}
}
\value{
vector listing parents before children
}
\description{
Graph is a list which for each node contains a vector of child nodes
in the returned list, parents appear before their children.
}
\details{
Implementation of Kahn algorithm with a modification to maintain the order of input elements.
}
\examples{
  staged.dependencies:::topological_sort(list(A = c(), B = c("A"), C = c("B"), D = c("A")))
  staged.dependencies:::topological_sort(list(D = c("A"), A = c(), B = c("A"), C = c("B")))
  staged.dependencies:::topological_sort(list(D = c("A"), B = c("A"), C = c("B"), A = c()))
\dontrun{
  # cycle
  topological_sort(list(A = c("B"), B = c("C", "A"), C = c()))
}
}
