% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies.R
\name{check_downstream}
\alias{check_downstream}
\title{Check & install downstream dependencies}
\usage{
check_downstream(
  dep_structure,
  distance = NULL,
  check_args = c("--no-multiarch", "--with-keep.source", "--install-tests"),
  only_tests = FALSE,
  install_external_deps = TRUE,
  upgrade = "never",
  package_list = NULL,
  dry = FALSE,
  verbose = 1,
  ...
)
}
\arguments{
\item{dep_structure}{(\code{dependency_structure}) output of function
\code{dependency_table}; uses \code{dep_structure$table} to infer the packages
to apply action to and infer installation order;
uses \code{dep_structure$deps} to infer upstream dependencies}

\item{distance}{(\code{numeric}) additional filter to only install downstream
packages at most this distance from the \code{dependency_structure$current_pkg}
(advanced use only)}

\item{check_args}{(\code{list}) arguments passed to \code{rcmdcheck}}

\item{only_tests}{(\code{logical}) whether to only run tests (rather than checks)}

\item{install_external_deps}{logical to describe whether to install
external dependencies of package using \code{\link[remotes:install_deps]{remotes::install_deps()}} (or \code{\link[renv:install]{renv::install()}} if
inside an renv environment) .}

\item{upgrade}{argument passed to \code{\link[remotes:install_deps]{remotes::install_deps()}}, defaults to \code{'never'}. Ignored
if inside an \code{renv} environment.}

\item{package_list}{(\code{character}) If not NULL, an additional filter, only packages on this
list will be considered and their dependencies installed if needed (advanced usage only).}

\item{dry}{(\code{logical}) dry run that outputs what would happen without actually
doing it.}

\item{verbose}{(\code{numeric}) \cr verbosity level, incremental;
(0: None, 1: packages that get installed + high-level git operations,
2: includes git checkout infos)}

\item{...}{
  Arguments passed on to \code{\link[=install_deps]{install_deps}}
  \describe{
    \item{\code{install_project}}{(\code{logical}) whether to also install the current
package (i.e. the package named in \code{dependency_structure$current_pkg}),
ignored unless \code{install_direction = "upstream"} (because downstream
deps automatically install all their upstream deps)}
    \item{\code{install_direction}}{"upstream", "downstream" or "all"; which packages
to install (according to dependency structure). By default this is only "upstream"}
  }}
}
\value{
\code{data.frame} of performed actions
}
\description{
Installs downstream R packages as specified in a
\code{dependency_structure} object  and then runs
\code{rcmdcheck} (\verb{R CMD check}) on the downstream dependencies.
}
\examples{
\dontrun{
x <- dependency_table(project = ".", verbose = 1)

check_downstream(x, verbose = 1)
check_downstream(x, verbose = 1, only_test = TRUE, check_args = c("--no-manual"))
}
}
