% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies.R
\name{install_deps}
\alias{install_deps}
\title{Install dependencies of project}
\usage{
install_deps(
  dep_structure,
  install_project = TRUE,
  install_direction = "upstream",
  install_external_deps = TRUE,
  upgrade = "never",
  package_list = NULL,
  dry = FALSE,
  verbose = 1,
  ...
)
}
\arguments{
\item{dep_structure}{(\code{dependency_structure}) output of function
\code{dependency_table}; uses \code{dep_structure$table} to infer the packages
to apply action to and infer installation order;
uses \code{dep_structure$deps} to infer upstream dependencies}

\item{install_project}{(\code{logical}) whether to also install the current
package (i.e. the package named in \code{dependency_structure$current_pkg}),
ignored unless \code{install_direction = "upstream"} (because downstream
deps automatically install all their upstream deps)}

\item{install_direction}{"upstream", "downstream" or "all"; which packages
to install (according to dependency structure). By default this is only "upstream"}

\item{install_external_deps}{logical to describe whether to install
external dependencies of package using \code{\link[remotes:install_deps]{remotes::install_deps()}} (or \code{\link[renv:install]{renv::install()}} if
inside an renv environment) .}

\item{upgrade}{argument passed to \code{\link[remotes:install_deps]{remotes::install_deps()}}, defaults to \code{'never'}. Ignored
if inside an \code{renv} environment.}

\item{package_list}{(\code{character}) If not NULL, an additional filter, only packages on this
list will be considered and their dependencies installed if needed (advanced usage only).}

\item{dry}{(\code{logical}) dry run that outputs what would happen without actually
doing it.}

\item{verbose}{(\code{numeric}) \cr verbosity level, incremental;
(0: None, 1: packages that get installed + high-level git operations,
2: includes git checkout infos)}

\item{...}{Additional args passed to \code{\link[remotes:install_deps]{remotes::install_deps()}}. Ignored
if inside an \code{renv} environment.}
}
\value{
\code{data.frame} of performed actions
}
\description{
Given a \code{dependency_structure} object, install the R packages
}
\examples{
\dontrun{
x <- dependency_table(project = "./path/to/project")

install_deps(x)

# install all dependencies
install_deps(x, install_direction = "all")
}
}
\seealso{
determine_branch
}
