% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rstudio_jobs.R
\name{install_deps_job}
\alias{install_deps_job}
\title{Install dependencies job}
\usage{
install_deps_job(project = ".", verbose = 1, ...)
}
\arguments{
\item{project}{(\code{character}) directory of project (for which to restore the
dependencies according to feature); must be a git repository.}

\item{verbose}{(\code{numeric}) verbosity level, incremental;
(0: None, 1: packages that get installed + high-level git operations,
2: includes git checkout infos)}

\item{...}{
  Arguments passed on to \code{\link[=install_deps]{install_deps}}
  \describe{
    \item{\code{feature}}{(\code{character}) feature we want to build; inferred from the
branch of the project if not provided; warning if not consistent with
current branch of project}
    \item{\code{dry_install}}{(\code{logical}) dry run that lists packages that would be
installed without installing; this still checks out the git repos to
match \code{feature}}
    \item{\code{install_external_deps}}{logical to describe whether to install
external dependencies of package using \code{remotes::install_deps}.}
    \item{\code{install_project}}{(\code{logical}) whether to also install the current
package (\code{project})}
    \item{\code{local_repos}}{(\code{data.frame}) repositories that should be taken from
local rather than cloned; columns are \verb{repo, host, directory}}
    \item{\code{direction}}{(\code{character}) direction in which to discover packages
either or both of "upstream" and "downstream"
to recursively checkout upstream and/or downstream dependencies}
  }}
}
\description{
Install dependencies job
}
\examples{
\dontrun{
install_deps_job()
install_deps_job(feature = "6_makegraph@main")

# install all dependencies
install_deps_job(direction = c("upstream", "downstream"))
install_deps_job(dry_install = TRUE)
}
}
\seealso{
install_deps
}
